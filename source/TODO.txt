Move random number generation out of materials
Fix the normalInterp stuff
Instead of intersect -> generateintersectioninfo just add a boolean to generate intersectioninfo when intersecting, also consider removing the minprimitive thing and just have info
Replace debugbreaks with better error messages
Replace some tuples with structures?
Clean up Ashikhmin & other materials
Copy to clipboard feature
Refactor GetProjectedSceneHull
Use more modern threads
Make TraceShadowRay account for light portals
"Intersecting against lights might need a rethink"
Unhardcode light area sampling in light portal
Think of a better way of dealing with epsilons - account for numerical errors etc
(mostly for "fun") Make light portals work inside scenes
Add check that all primitives have materials, in scene
Implement multiple importance sampling for light portals
Add physical camera to bdpt
Add light source resampling to BDPT
Try including rr with mis
- Fill typedefs ("Normal" etc)
- ctrl-F 14 years later
- Handle loading of multi-vertex faces that all share one normal, e.g. counter light in kitchen2 (if not handled)
- Detabify
- ctrl-F This could also be a hash table, for very large triangle meshes
- Make various functions return a tuple instead of taking output parameters
- Rename various functions from GetBlahBlahBlah to just blah
- Make Sphere use IntersectSphere in its intersect/generateintersectioninfo functions
- Put ids for saving in a single file
- Read light sources from .mtl files
- Change the DirectHitMIS etc stuff
- Make mr. lightportal use next event estimation
- Investigate BDPT fireflies
- Add support for proper environment light sources
- Check that materials can be assigned to different faces (e.g. the microwave in interior.obj)
- Add lightportal/serialize (save)
- Debug SphereLight + LightPortal (the spherelight didn't self-intersect)
- Replace the .0000001s with eps
- Unify all the different intersect() methods with different tmin/tmaxes
- Unify the above in KDTree
- Remove sampling components
- Unify sample/sampleE
